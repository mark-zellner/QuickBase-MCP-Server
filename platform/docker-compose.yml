version: '3.8'

services:
  # Redis for session management and caching
  redis:
    image: redis:7-alpine
    container_name: qb-platform-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: qb-platform-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - WS_PORT=3002
      - REDIS_URL=redis://redis:6379
      - CORS_ORIGIN=http://localhost:3000
    env_file:
      - ./backend/.env
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: qb-platform-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - VITE_API_BASE_URL=http://localhost:3001/api
      - VITE_WS_URL=ws://localhost:3002
    depends_on:
      backend:
        condition: service_healthy

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: qb-platform-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
    profiles:
      - production

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: qb-platform-network